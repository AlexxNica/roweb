knitr::knit("tutorials/historydata_tutorial.Rmd")
setwd("tutorials/")
knitr::knit("tutorials/historydata_tutorial.Rmd")
knitr::knit("historydata_tutorial.Rmd")
citation("historydata")
install.packages("historydata")
knitr::knit("historydata_tutorial.Rmd")
citation("historydata")
knitr::knit("historydata_tutorial.Rmd")
install.packages("rnbn")
citation("rnbn")
library("rnbn")
occ <- getOccurrences(tvks = 'NBNSYS0000002010')
nbnLogin
Sys.getenv()
getOption('nbnusername')
getOption("nbnkey")
nbnLogin(username = getOption('nbnusername'), password = getOption("nbnkey"))
occ <- getOccurrences(tvks = 'NBNSYS0000002010')
getTVKQuery
dt <- getTVKQuery(query = "badger")
dt
dt[,c('ptaxonVersionKey','name')]
dt <- getTVKQuery(query = "Tropidia scita",
top = TRUE)
dt
occ <- getOccurrences(tvks = dt$ptaxonVersionKey,
silent = TRUE,
acceptTandC = TRUE)
?getOccurrences()
myPolygon <- "POLYGON((-1.120305061340332 51.60510713031779,-1.1186742782592773 51.590978433037144,-1.098933219909668 51.59129837670387,-1.0994482040405273 51.604840591807104,-1.120305061340332 51.60510713031779))"
occ <- getOccurrences(polygon = myPolygon,
silent = TRUE,
acceptTandC = TRUE)
getOccurrences
myPolygon
occ <- getOccurrences(gridRef = myPolygon,
silent = TRUE,
acceptTandC = TRUE)
occ <- getOccurrences(group = 'quillwort',
acceptTandC = TRUE)
datasets <- listDatasets()
head(datasets[45:50,]) # I select a group with short titles
datasets <- c("SGB00001", "GA000483")
listDatasets()
listDatasets
session_info()
dt <- getOccurrences(tvks = "NBNSYS0000007111",
datasets = "SGB00001",
startYear = 1990,
endYear = 2006,
silent = TRUE,
acceptTandC = TRUE)
dt
head(2016-09-01)
head(dt)
VCs <- listVCs()
VCs
head(VCs)
occ <- getOccurrences(tvk = 'NBNSYS0000007111',
VC = 'East Suffolk',
silent = TRUE,
acceptTandC = TRUE)
taxalist <- datasetTaxa('GA000312')
taxalist
names(taxalist)
head(taxalist$commonName)
knitr::knit("rnbn_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("rselenium_tutorial.Rmd")
knitr::knit("tokenizers_tutorial.Rmd")
knitr::knit("hunspell_tutorial.Rmd")
knitr::knit("rdatacite_tutorial.Rmd")
install.packages("neotoma")
library("neotoma")
library('mapdata')
test <- get_dataset(taxonname='Mammuthus*')
site.locs <- get_site(test)
plot(1, type = 'n',
xlim=range(site.locs$long)+c(-10, 10),
ylim=range(site.locs$lat)+c(-10, 10),
xlab='Longitude', ylab = 'Latitude')
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "lightblue")
map('world',
interior=TRUE,
fill=TRUE,
col='gray',
xlim=range(site.locs$long)+c(-10, 10),
ylim=range(site.locs$lat)+c(-10, 10),
add=TRUE)
points(site.locs$long, site.locs$lat, pch=19, cex=0.5, col='red')
library('ggplot2')
library('plyr')
pubs <- get_publication()
pub.years <- ldply(pubs, "[[", "meta")
ggplot(data=pub.years, aes(x = year)) +
stat_bin(aes(y=..density..*100, position='dodge'), binwidth=1) +
theme_bw() +
ylab('Percent of Publications') +
xlab('Year of Publication') +
scale_y_continuous(expand = c(0, 0.1)) +
scale_x_continuous(breaks = seq(min(pub.years$year, na.rm=TRUE), 2014, by=20))
knitr::knit("neotoma_tutorial.Rmd")
install.packages("rotll")
install.packages("rotl")
citation("rotl")
library("rotl")
taxa <- c("Hyla", "Salmo", "Diadema", "Nautilus")
resolved_names <- tnrs_match_names(taxa)
knitr::kable(resolved_names)
resolved_names <- tnrs_match_names(taxa, context_name = "Animals")
my_tree <- tol_induced_subtree(ott_ids = resolved_names$ott_id)
plot(my_tree, no.margin=TRUE)
taxa <- c("Hyla", "Salmo", "Diadema", "Nautilus")
resolved_names <- tnrs_match_names(taxa)
inspect(resolved_names, taxon_name = "diadema")
resolved_names <- update(resolved_names, taxon_name = "diadema",
new_row_number = 2)
diadema_info <- taxonomy_taxon_info(631176)
tax_rank(diadema_info)
synonyms(diadema_info)
tax_name(diadema_info)
diadema_tax_tree <- taxonomy_subtree(631176)
diadema_tax_tree
mono_id <- tnrs_match_names("Monotremes")
mono_tree <- tol_subtree(ott_id = mono_id$ott_id[1])
plot(mono_tree)
knitr::knit("rotl_tutorial.Rmd")
install.packages("europepmc")
citation("europepmc")
knitr::knit("europepmc_tutorial.Rmd")
knitr::knit("europepmc_tutorial.Rmd")
install.packages("rbhl")
citation("rbhl")
knitr::knit("rbhl_tutorial.Rmd")
install.packages("rfishbase")
citation("rfishbase")
library("rfishbase")
knitr::knit("rfishbase_tutorial.Rmd")
library("rfishbase")
fish[1:2]
fish <- common_to_sci("trout")
fish
xx=species(fish[1:2])
class(xx)
xx
species(fish[1:2])[, 1:6]
knitr::knit("rfishbase_tutorial.Rmd")
setwd("tutorials/")
knitr::knit("rnaturalearth_tutorial.Rmd")
knitr::knit("rnaturalearth_tutorial.Rmd")
library("opencage")
library("opencage")
output <- opencage_forward(placename = "Sarzeau")
print(output$time_stamp)
library("dplyr")
output$rate_info %>% knitr::kable()
output$results %>% knitr::kable()
output2 <- opencage_reverse(latitude = 51.5034070,
longitude = -0.1275920)
print(output2$time_stamp)
output2$rate_info %>% knitr::kable()
output2$results %>% knitr::kable()
results1 <- opencage_forward(placename = "Berlin")
results1$results %>% knitr::kable()
results2 <- opencage_forward(placename = "Berlin",
bounds = c(-90,38,0, 45))
results2$results %>% knitr::kable()
results3 <- opencage_forward(placename = "Berlin", country = "DE")
results3$results %>% knitr::kable()
results3$results %>% knitr::kable()
results4 <- opencage_forward(placename = "Berlin", country = "DE", language = "de")
results4$results %>% knitr::kable()
system.time(opencage_reverse(latitude = 10, longitude = 10))
system.time(opencage_reverse(latitude = 10, longitude = 10))
memoise::forget(opencage_reverse)
system.time(opencage_reverse(latitude = 10, longitude = 10))
knitr::knit("opencage_tutorial.Rmd")
output$rate_info
output <- opencage_forward(placename = "Sarzeau")
print(output$time_stamp)
output$rate_info
output$results
knitr::knit("opencage_tutorial.Rmd")
knitr::knit("opencage_tutorial.Rmd")
knitr::knit("riem")
knitr::knit("riem_tutorial.Rmd")
knitr::knit("riem_tutorial.Rmd")
knitr::knit("riem_tutorial.Rmd")
library("riem")
library("dplyr")
riem_networks() %>% head()
riem_networks
riem_networks() %>% head()
traceback()
knitr::knit("riem_tutorial.Rmd")
library("geoparser")
output <- geoparser_q("I was born in Vannes and I live in Barcelona")
output
output <- geoparser_q("I was born in Vannes and I live in Barcelona")
knitr::knit("originr_tutorial.Rmd")
knitr::knit("gutenbergr_tutorial.Rmd")
knitr::knit("geojsonlint_tutorial.Rmd")
setwd("tutorials/")
citation("mregions")
knitr::knit("mregions_tutorial.Rmd")
knitr::knit("mregions_tutorial.Rmd")
citation("getlandsat")
knitr::knit("getlandsat_tutorial.Rmd")
citation("tabulizer")
knitr::knit("tabulizer_tutorial.Rmd")
install.packages("rgeospatialquality")
citation("tabulizer")
citation("rgeospatialquality")
knitr::knit("rgeospatialquality_tutorial.Rmd")
library("rgeospatialquality")
rec <- list(decimalLatitude=42.1833,
decimalLongitude=-1.8332,
countryCode="ES",
scientificName="Puma concolor")
rec
parse_record(record=rec)
parse_record
citation("assertr")
install.packages("assertr")
citation("assertr")
library("assertr")
head(mtcars)
our.data <- mtcars
our.data$mpg[5] <- our.data$mpg[5] * -1
our.data[4:6,]
library(dplyr)
our.data %>%
group_by(cyl) %>%
summarise(avg.mpg=mean(mpg))
library(assertr)
our.data %>%
verify(mpg >= 0)
our.data %>%
verify(mpg >= 0) %>%
group_by(cyl)
our.data %>%
verify(mpg >= 0) %>%
group_by(cyl) %>%
summarise(avg.mpg=mean(mpg))
our.data %>%
assert(within_bounds(0,Inf), mpg)
our.data %>%
assert(within_bounds(0,Inf), mpg) %>%
group_by(cyl)
knitr::knit("assertr_tutorial.Rmd")
knitr::knit("assertr_tutorial.Rmd")
install("../../../ropenscilabs/ropenaq/")
install.packages("ropenaq")
citation("ropenaq")
library("ropenaq")
countriesTable <- aq_countries()
library("knitr")
kable(countriesTable$results)
countriesTable$results
citiesTable <- aq_cities()
citiesTable
citiesTable$results
citiesTableIndia <- aq_cities(country="IN")
citiesTableIndia$results
locationsIndia <- aq_locations(country="IN", parameter="pm25")
locationsIndia$results
how_many <- aq_measurements(city = "Delhi",
parameter = "pm25")$meta
how_many
how_many$found
knitr::knit("ropenaq_tutorial.Rmd")
devtools::install_github("ropenscilabs/monkeylearn")
citation("monkeylearn")
library("monkeylearn")
library("monkeylearn")
text <- "In the 19th century, the major European powers had gone to great lengths to maintain a balance of power throughout Europe, resulting in the existence of a complex network of political and military alliances throughout the continent by 1900.[7] These had started in 1815, with the Holy Alliance between Prussia, Russia, and Austria. Then, in October 1873, German Chancellor Otto von Bismarck negotiated the League of the Three Emperors (German: Dreikaiserbund) between the monarchs of Austria-Hungary, Russia and Germany."
output <- monkeylearn_extract(request = text,
extractor_id = "ex_isnnZRbS")
output
library("monkeylearn")
text <- "In the 19th century, the major European powers had gone to great lengths to maintain a balance of power throughout Europe, resulting in the existence of a complex network of political and military alliances throughout the continent by 1900.[7] These had started in 1815, with the Holy Alliance between Prussia, Russia, and Austria. Then, in October 1873, German Chancellor Otto von Bismarck negotiated the League of the Three Emperors (German: Dreikaiserbund) between the monarchs of Austria-Hungary, Russia and Germany."
output <- monkeylearn_extract(request = text,
extractor_id = "ex_isnnZRbS")
output
attr(output, "headers")
knitr::knit("monkeylearn_tutorial.Rmd")
library("monkeylearn")
classifiers <- monkeylearn_classifiers(private = FALSE)
classifiers_sentiment_french <- dplyr::filter(classifiers,
grepl("[Ss]entiment", name), language == "fr")
classifiers_sentiment_french
classifiers_sentiment_french$classifier_id
(classifier_id <- classifiers_sentiment_french$classifier_id)
text1 <- "Nous avons fait un magnifique voyage et parlé avec des personnes adorables."
text2 <- "Je déteste ne plus avoir de dentifrice."
text3 <- "Je pense que cette personne est exécrable et mesquine, je suis en colère."
request <- c(text1, text2, text3)
request
monkeylearn_classify(request,
classifier_id = classifier_id)
monkeylearn_classify
?monkeylearn_classify
text1 <- "Hauràs de dirigir-te al punt de trobada del grup al que et vulguis unir."
text2 <- "i want to buy an iphone"
text3 <- "Je déteste ne plus avoir de dentifrice."
request <- c(text1, text2, text3)
monkeylearn_classify(request,
classifier_id = "cl_oJNMkt2V")
knitr::knit("monkeylearn_tutorial.Rmd")
install.packages("osmplotr")
citation("omsplotr")
citation("osmplotr")
library("osmplotr")
indx <- which(!london$dat_BR$id %in% london$dat_BNR$id)
dat_B <- maptools::spRbind(london$dat_BR[indx,], london$dat_BNR)
indx <- which(!london$dat_H$id %in% london$dat_HP$id)
dat_H <- maptools::spRbind(london$dat_H[indx,], london$dat_HP)
dat_T <- london$dat_T
bbox <- get_bbox(c(-0.13,51.50,-0.11,51.52))
dat_B <- extract_osm_objects(key='building', bbox=bbox)
map <- osm_basemap(bbox=bbox, bg='gray20')
map
map <- add_osm_objects(map, dat_B, col = 'gray40')
print_osm_map(map)
print_osm_map(map, filename = 'map_a1.png', width = 600, units = 'px', dpi = 72)
bbox <- get_bbox (c(-0.13,51.51,-0.11,51.52))
dat_B <- extract_osm_objects(key='building', bbox=bbox)
dat_H <- extract_osm_objects(key='highway', bbox=bbox)
class(dat_B); class(dat_H)
length(dat_B); length(dat_H)
dat_T <- extract_osm_objects(key = 'natural', value = 'tree', bbox = bbox)
class(dat_T); length(dat_T)
osm_structures()
osm_structures()$value [1:4]
dat <- make_osm_map(structures=osm_structures (), bbox=bbox)
dat1 <- list(dat_BU=NULL, dat_A=NULL, dat_W=NULL, dat_G=NULL,
dat_N=NULL, dat_P=NULL, dat_H=NULL, dat_BO=NULL, dat_T=NULL)
dat <- list(osm_data=dat1, map=ggplot2::ggplot ())
dat
names(dat)
sapply(dat, class)
names(dat$osm_data)
osm_structures(structures = c('building', 'highway'))
osm_structures(structures = 'grass')
dat_B <- extract_osm_objects(key='building', bbox=bbox)
bbox_small <- get_bbox(c(-0.13,51.51,-0.11,51.52))
map <- osm_basemap(bbox=bbox_small, bg='gray20')
map <- add_osm_objects(map, dat_H, col='gray70')
map <- add_osm_objects(map, dat_B, col='gray40')
map
print_osm_map(map)
print_osm_map(map, filename='map_a2.png', width=600, units='px', dpi=72)
?print_osm_map
print_osm_map(map)
map
library("osmplotr")
library("maptools")
indx <- which(!london$dat_BR$id %in% london$dat_BNR$id)
dat_B <- maptools::spRbind(london$dat_BR[indx,], london$dat_BNR)
indx <- which(!london$dat_H$id %in% london$dat_HP$id)
dat_H <- maptools::spRbind(london$dat_H[indx,], london$dat_HP)
dat_T <- london$dat_T
bbox <- get_bbox(c(-0.13, 51.50, -0.11, 51.52))
map <- osm_basemap(bbox = bbox, bg = 'gray20')
map <- add_osm_objects(map, dat_B, col = 'gray40')
print_osm_map(map)
knitr::knit("osmplotr_vignette.Rmd")
print_osm_map
print_osm_map(map)
indx <- which(!london$dat_BR$id %in% london$dat_BNR$id)
dat_B <- maptools::spRbind(london$dat_BR[indx,], london$dat_BNR)
indx <- which(!london$dat_H$id %in% london$dat_HP$id)
dat_H <- maptools::spRbind(london$dat_H[indx,], london$dat_HP)
dat_T <- london$dat_T
bbox <- get_bbox(c(-0.13, 51.50, -0.11, 51.52))
map <- osm_basemap(bbox = bbox, bg = 'gray20')
map <- add_osm_objects(map, dat_B, col = 'gray40')
print_osm_map(map)
library("osmplotr")
library("maptools")
indx <- which(!london$dat_BR$id %in% london$dat_BNR$id)
dat_B <- maptools::spRbind(london$dat_BR[indx,], london$dat_BNR)
indx <- which(!london$dat_H$id %in% london$dat_HP$id)
dat_H <- maptools::spRbind(london$dat_H[indx,], london$dat_HP)
dat_T <- london$dat_T
bbox <- get_bbox(c(-0.13, 51.50, -0.11, 51.52))
map <- osm_basemap(bbox = bbox, bg = 'gray20')
map <- add_osm_objects(map, dat_B, col = 'gray40')
print_osm_map(map)
dat_B <- extract_osm_objects(key='building', bbox=bbox)
dat_H <- extract_osm_objects(key='highway', bbox=bbox)
dat_T <- extract_osm_objects(key='natural', value='tree', bbox=bbox)
bbox_small <- get_bbox(c(-0.13,51.51,-0.11,51.52))
map <- osm_basemap(bbox=bbox_small, bg='gray20')
map <- add_osm_objects(map, dat_H, col='gray70')
map <- add_osm_objects(map, dat_B, col='gray40')
print_osm_map(map)
print_osm_map(map)
print_osm_map(map, filename = "../assets/tutorial-images/osmplotr/map2.png")
map <- osm_basemap(bbox=bbox_small, bg='gray20')
map <- add_osm_objects(map, dat_B, col='gray40', border='orange', size=0.2)
print_osm_map(map)
print_osm_map(map, filename = "../assets/tutorial-images/osmplotr/map3.png")
bbox <- get_bbox(c(-0.13, 51.50, -0.11, 51.52))
indx <- which(!london$dat_BR$id %in% london$dat_BNR$id)
dat_B <- maptools::spRbind(london$dat_BR[indx,], london$dat_BNR)
indx <- which(!london$dat_H$id %in% london$dat_HP$id)
dat_H <- maptools::spRbind(london$dat_H[indx,], london$dat_HP)
dat_T <- london$dat_T
bbox <- get_bbox(c(-0.13, 51.50, -0.11, 51.52))
map <- osm_basemap(bbox = bbox, bg = 'gray20')
map <- add_osm_objects(map, dat_B, col = 'gray40')
dat_B <- extract_osm_objects(key='building', bbox=bbox)
map <- add_osm_objects(map, dat_B, col = 'gray40')
print_osm_map(map)
print_osm_map(map, filename = "../assets/tutorial-images/osmplotr/map1.png")
knitr::knit("osmplotr_vignette.Rmd")
devtools::install_github("ropenscilabs/convertr")
citation("convertr")
